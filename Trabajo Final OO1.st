TestCase subclass: #TestAdministrativo	instanceVariableNames: 'empleado persona empresa produ1 produ2 donacion empleado2'	classVariableNames: ''	package: 'Trabajo Final OO1-Test'!!TestAdministrativo methodsFor: 'running' stamp: 'TomasArrue 10/6/2021 14:47'!setUp	"Hooks that subclasses may override to define the fixture of test."	| a |	a := Administrativo new.	a estadoAdministrativo:'confirmado'.	empleado := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria: a.	empleado2 := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria: Administrativo new.		persona := Persona		personaCon: 'pepe'		unApellido: 'lopez'		unCelular: 12345		unCorreo: 'adas@gmail.com'		unDni: 1546545.	empresa := Empresa		empresaCon: 'sancor'		unCuit: 123456		unaDireccion: 'av14 n256'		unTelefono: 888840154		unaPersona: persona.	produ1 := Producto		productoCon: 'lata'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 12 day: 31)		unaCantidad: 10.	produ2 := Producto		productoCon: 'atun'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 11 day: 25)		unaCantidad: 12.	donacion := Donacion new.	donacion cargarProducto: produ1.	donacion cargarProducto: produ2! !!TestAdministrativo methodsFor: 'accesing' stamp: 'LucasDiLorenzo 9/25/2021 15:56'!testValidarDonacion	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self deny: donacion estadoDonacion equals: 'confirmada y sin retirarr'.	empleado validarDonacion: donacion.	self assert: donacion estadoDonacion equals: 'confirmada y sin retirar'! !!TestAdministrativo methodsFor: 'accesing' stamp: 'LucasDiLorenzo 9/25/2021 15:55'!testConfirmarRetiroConUnaFecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	| d |	d := '18 September 2020' asDate.	self deny: donacion diaRetirado equals: d.	self deny: donacion estadoDonacion equals: 'retriado'.	empleado categoria confirmarRetiro: donacion unaFecha: d.	self assert: donacion diaRetirado equals: d.	self assert: donacion estadoDonacion equals: 'retirado'! !!TestAdministrativo methodsFor: 'accesing' stamp: 'tomas 10/3/2021 15:47'!testConfirmarEstado	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self		deny: empleado2 categoria estadoAdministrativo equals: 'confirmado'.		 empleado2 confirmarEstado.	self assert: empleado2 categoria estadoAdministrativo equals: 'confirmado'! !!TestAdministrativo methodsFor: 'accesing' stamp: 'LucasDiLorenzo 9/25/2021 13:03'!testRegistrarRetiroConUnaFecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	| d |	d := '18 September 2020' asDate.	self deny: donacion diaRetirado equals: d.	empleado categoria registrarRetiro: donacion unaFecha: d.	self assert: donacion diaRetirado equals: d.! !!TestAdministrativo methodsFor: 'accesing' stamp: 'LucasDiLorenzo 9/25/2021 15:56'!testRegistrarDeposito	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self assert: donacion estadoDonacion equals: 'sin confirmar'.	empleado registrarDeposito: donacion.	self assert: donacion estadoDonacion equals: 'en deposito'! !TestCase subclass: #TestBalp	instanceVariableNames: 'empresa p balp empleado'	classVariableNames: ''	package: 'Trabajo Final OO1-Test'!!TestBalp methodsFor: 'running' stamp: 'TomasArrue 9/29/2021 08:31'!setUp	"Hooks that subclasses may override to define the fixture of test."	balp := Balp new.	p := Persona personaCon: 'pepe' unApellido: 'lopez' unCelular:  12345unCorreo: 'adas@gmail.com' unDni: 1546545.	empresa := Empresa empresaCon: 'sancor' unCuit: 123456 unaDireccion: 'av14 n256' unTelefono: 888840154 unaPersona: p.! !!TestBalp methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 16:48'!testAgregarEmpleado	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self assert: balp empleados isEmpty.	balp agregarEmpleado: empleado .	self assert: balp empleados last equals: empleado ! !!TestBalp methodsFor: 'accessing' stamp: 'TomasArrue 9/24/2021 14:32'!testRegistrarEmpresa	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"		self assert: balp empresas isEmpty .	balp registrarEmpresa: empresa.	self assert: balp empresas last equals: empresa! !TestCase subclass: #TestDonacion	instanceVariableNames: 'don1 don2 p1 p2'	classVariableNames: ''	package: 'Trabajo Final OO1-Test'!!TestDonacion methodsFor: 'tests' stamp: 'TomasArrue 9/29/2021 09:34'!testCargarProducto	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self assert: don1 productos isEmpty.	don1 cargarProducto: p1.	self assert: don1 productos isNotEmpty.	self assert: don1 productos size equals: 1.	self assert: don1 productos last equals: p1.	don1 cargarProducto: p2.	self assert: don1 productos size equals: 2.	self assert: don1 productos last equals: p2.	self assert: (don1 productos includes: p1).	self assert: (don1 productos includes: p2)! !!TestDonacion methodsFor: 'tests' stamp: 'TomasArrue 9/29/2021 09:47'!testMenosDeUnaAnio	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self assert: don1 menosDeUnAnio.	self deny: don2 menosDeUnAnio.	don1 diaRetirado: (Date today - 60 week) asDate.	self deny: don1 menosDeUnAnio.	don2 diaRetirado: (Date today + 60 week) asDate.	self assert: don2 menosDeUnAnio! !!TestDonacion methodsFor: 'running' stamp: 'TomasArrue 9/24/2021 14:40'!setUp	"Hooks that subclasses may override to define the fixture of test."	p1 := Producto		productoCon: 'lata'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 12 day: 31)		unaCantidad: 10.	p2 := Producto		productoCon: 'atun'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 11 day: 25)		unaCantidad: 12.	don1 := Donacion new.	don1 diaRetirado: Date today.	don2 := Donacion new.	don2 diaRetirado: '22 November 2019' asDate! !TestCase subclass: #TestEmpleado	instanceVariableNames: 'empleadoA empleadoJ'	classVariableNames: ''	package: 'Trabajo Final OO1-Test'!!TestEmpleado methodsFor: 'running' stamp: 'TomasArrue 10/6/2021 14:47'!setUp	"Hooks that subclasses may override to define the fixture of test."	empleadoA := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria:Administrativo new.	empleadoJ := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria:Jerarquico  new.	! !!TestEmpleado methodsFor: 'running' stamp: 'LucasDiLorenzo 9/25/2021 12:29'!testIsJerarquico	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self deny: empleadoA isJerarquico.	self assert: empleadoJ isJerarquico! !!TestEmpleado methodsFor: 'running' stamp: 'TomasArrue 9/29/2021 10:34'!testIsAdministrativo	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self deny: empleadoJ isAdministrativo.	self assert: empleadoA isAdministrativo	! !TestCase subclass: #TestEmpresa	instanceVariableNames: 'empleado persona empresa produ1 produ2 donacion1 donacion2 empleado2'	classVariableNames: ''	package: 'Trabajo Final OO1-Test'!!TestEmpresa methodsFor: 'running' stamp: 'TomasArrue 10/6/2021 14:47'!setUp	"Hooks that subclasses may override to define the fixture of test."	| j |	j := Jerarquico new.	empleado := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria: j.	empleado2 := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria: Administrativo new.	persona := Persona		personaCon: 'pepe'		unApellido: 'lopez'		unCelular: 12345		unCorreo: 'adas@gmail.com'		unDni: 1546545.	empresa := Empresa		empresaCon: 'sancor'		unCuit: 123456		unaDireccion: 'av14 n256'		unTelefono: 888840154		unaPersona: persona.	produ1 := Producto		productoCon: 'lata'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 12 day: 31)		unaCantidad: 10.	produ2 := Producto		productoCon: 'atun'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 11 day: 25)		unaCantidad: 12.	donacion1 := Donacion new.	donacion1 cargarProducto: produ1.	donacion1 cargarProducto: produ2.	donacion2 := Donacion new.	donacion2 cargarProducto: produ1.! !!TestEmpresa methodsFor: 'tests' stamp: 'TomasArrue 9/29/2021 10:34'!testCargarDonacion	self assert: empresa donaciones isEmpty.	empresa cargarDonacion: donacion1.	self assert: empresa donaciones isNotEmpty.	self assert: empresa donaciones last equals: donacion1.	self assert: empresa donaciones size equals: 1! !!TestEmpresa methodsFor: 'tests' stamp: 'LucasDiLorenzo 9/26/2021 12:02'!testConfirmarEstado	self assert:  empresa estadoEmpresa equals: 'empresa sin confirmar'.	empresa confirmarEstado.	self assert: empresa estadoEmpresa equals: 'empresa confirmada'! !!TestEmpresa methodsFor: 'tests' stamp: 'tomas 10/3/2021 20:33'!testReporteAnual	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"						self assert: (empresa reporteAnual) className equals:  'Dictionary'.	self assert: (empresa reporteAnual) isEmpty.	 	empresa cargarDonacion: donacion1.		donacion1 diaRetirado: Date today.		self assert: (empresa reporteAnual) isNotEmpty.		self assert: (empresa reporteAnual) size equals: 1.		self assert: ((empresa reporteAnual)at: (Date today asString)) equals: donacion1 productos.		donacion2 diaRetirado: '12 September 2020' asDate.		empresa cargarDonacion: donacion2.		self assert: (empresa reporteAnual) size equals: 1.	self assert: ((empresa reporteAnual) at: (Date today asString)) equals: donacion1 productos.		donacion2 diaRetirado: '12 September 2021' asDate.		self assert: (empresa reporteAnual) size equals: 2.		! !TestCase subclass: #TestJerarquico	instanceVariableNames: 'empleado persona empresa empresa2 produ1 produ2 donacion empleado2'	classVariableNames: ''	package: 'Trabajo Final OO1-Test'!!TestJerarquico methodsFor: 'tests' stamp: 'tomas 10/3/2021 19:59'!testConsultaDonantes	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"				| empresas |				empresas := OrderedCollection new.		self assert: (empleado consultarDonantes: empresas) className equals:  'Dictionary'.		self assert: (empleado consultarDonantes: empresas) size equals: 0.		empresas add: empresa.		self assert: (empleado consultarDonantes: empresas) size equals: 1.		empresas add: empresa.		self assert: (empleado consultarDonantes: empresas) size equals: 1.		empresas add: empresa2.		self assert: (empleado consultarDonantes: empresas) size equals: 2.		self assert: ((empleado consultarDonantes: empresas) includesKey: empresa) equals: true.	self assert: ((empleado consultarDonantes: empresas) includesKey: empresa2) equals: true.		self assert: ((empleado consultarDonantes: empresas) at: empresa)className equals: 'OrderedCollection'.	self assert: ((empleado consultarDonantes: empresas) at: empresa) isEmpty.		empresa2 cargarDonacion: donacion.		self assert: ((empleado consultarDonantes: empresas) at: empresa2) isNotEmpty.		self assert: (((empleado consultarDonantes: empresas) at: empresa2) includes: donacion).! !!TestJerarquico methodsFor: 'running' stamp: 'TomasArrue 9/29/2021 10:06'!testValidarEmpAdm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self deny: empleado2 categoria estadoAdministrativo		equals: 'rechazado'.	self		assert: empleado2 categoria estadoAdministrativo		equals: 'sin confirmar'.	empleado validarEmpAdm: empleado2.	self		assert: empleado2 categoria estadoAdministrativo		equals: 'confirmado'! !!TestJerarquico methodsFor: 'running' stamp: 'LucasDiLorenzo 9/25/2021 13:57'!testValidarEmpresa	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self deny: empresa estadoEmpresa equals: 'empresa confirmada'.	empleado categoria validarEmpresa: empresa .	self assert: empresa estadoEmpresa equals:'empresa confirmada'.! !!TestJerarquico methodsFor: 'running' stamp: 'TomasArrue 9/29/2021 10:24'!testRechazarEmpAdm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	empleado2 categoria estadoAdministrativo: 'sin confirmar'.	self		deny: empleado2 categoria estadoAdministrativo		equals: 'rechazado'.	self		assert: empleado2 categoria estadoAdministrativo		equals: 'sin confirmar'.	empleado rechazarEmpAdm: empleado2.	self		assert: empleado2 categoria estadoAdministrativo		equals: 'rechazado'! !!TestJerarquico methodsFor: 'running' stamp: 'TomasArrue 10/6/2021 14:47'!setUp	"Hooks that subclasses may override to define the fixture of test."	| j |	j := Jerarquico new.	empleado := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria: j.	empleado2 := Empleado		empleadoCon: 'aaa'		unApellido: 'ss'		unDni: 7777		unCelular: 123		unCorreo: 456		unaCategoria: Administrativo new.	persona := Persona		personaCon: 'pepe'		unApellido: 'lopez'		unCelular: 12345		unCorreo: 'adas@gmail.com'		unDni: 1546545.	empresa := Empresa		empresaCon: 'sancor'		unCuit: 123456		unaDireccion: 'av14 n256'		unTelefono: 888840154		unaPersona: persona.		empresa2 := Empresa		empresaCon: 'mercado libre'		unCuit: 123456		unaDireccion: 'av14 n256'		unTelefono: 888840154		unaPersona: persona. 	produ1 := Producto		productoCon: 'lata'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 12 day: 31)		unaCantidad: 10.	produ2 := Producto		productoCon: 'atun'		unaMarca: 'inca'		unaVencimiento: (Date year: 2022 month: 11 day: 25)		unaCantidad: 12.	donacion := Donacion new.	donacion cargarProducto: produ1.	donacion cargarProducto: produ2! !Object subclass: #Administrativo	instanceVariableNames: 'estadoAdministrativo'	classVariableNames: ''	package: 'Trabajo Final OO1'!!Administrativo commentStamp: 'LucasDiLorenzo 9/25/2021 16:30' prior: 0!this is the class Administrativo!!Administrativo methodsFor: 'private' stamp: 'TomasArrue 9/29/2021 10:01'!negarEstado	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoAdministrativo: 'rechazado'! !!Administrativo methodsFor: 'private' stamp: 'LucasDiLorenzo 9/25/2021 14:08'!registrarDeposito: don	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoAdministrativo = 'confirmado'		ifTrue: [ don estadoEnDeposito ]! !!Administrativo methodsFor: 'private' stamp: 'TomasArrue 9/29/2021 10:01'!confirmarEstado 	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self estadoAdministrativo: 'confirmado'! !!Administrativo methodsFor: 'private' stamp: 'LucasDiLorenzo 10/9/2021 15:17'!consultarDonaciones: empresas	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoAdministrativo = 'confirmado' ifTrue: [ 		^ empresas flatCollect: [ :e | e obtenerDonaciones ] ]! !!Administrativo methodsFor: 'private' stamp: 'LucasDiLorenzo 9/25/2021 14:08'!validarDonacion: don	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoAdministrativo = 'confirmado'		ifTrue: [ don confirmarYSinRetirar ]! !!Administrativo methodsFor: 'private' stamp: 'LucasDiLorenzo 9/25/2021 14:08'!estadoAdministrativo: anObject	estadoAdministrativo := anObject! !!Administrativo methodsFor: 'private' stamp: 'TomasArrue 9/16/2021 12:31'!registrarRetiro: don unaFecha: fecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					don registrarRetiro: fecha! !!Administrativo methodsFor: 'private' stamp: 'LucasDiLorenzo 9/25/2021 15:54'!confirmarRetiro: don unaFecha: fecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	don diaRetirado: fecha.	don estadoDonacion: 'retirado'! !!Administrativo methodsFor: 'initialization' stamp: 'LucasDiLorenzo 9/25/2021 14:07'!initialize	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self estadoAdministrativo: 'sin confirmar'.! !!Administrativo methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 14:08'!estadoAdministrativo	^ estadoAdministrativo! !Object subclass: #Balp	instanceVariableNames: 'empleados empresas'	classVariableNames: ''	package: 'Trabajo Final OO1'!!Balp commentStamp: 'LucasDiLorenzo 9/25/2021 16:30' prior: 0!this is the class BALP!!Balp methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!empresas: anObject	empresas := anObject! !!Balp methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!empleados: anObject	empleados := anObject! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:34'!registrarDeposito: don unAdministrativo: adm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					adm registrarDeposito: don! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/10/2021 11:07'!registrarRetiro: adm unaDonacion: don unaFecha: fecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					adm registrarRetiro: don unaFecha: fecha! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!empresas	^ empresas! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 21:41'!registrarEmpresa: emp	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					empresas add: emp! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/29/2021 10:10'!rechazarEmpAdm: adm unJeraquico: jer	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	jer rechazarEmpAdm: adm! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 10/6/2021 15:33'!validarEmpresa: empr unJerarquico: jer	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	jer validarEmpresa: empr! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 10/6/2021 16:01'!validarDonacion: don unAdministrativo: adm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	adm validarDonacion: don! !!Balp methodsFor: 'accessing' stamp: 'LucasDiLorenzo 10/9/2021 13:31'!reporteDonante: empresa	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					^ empresa reporteAnual! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 11:26'!agregarEmpleado: emp	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					empleados add: emp! !!Balp methodsFor: 'accessing' stamp: 'LucasDiLorenzo 10/9/2021 14:59'!consultarDonaciones: adm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	^ adm consultarDonaciones: empresas! !!Balp methodsFor: 'accessing' stamp: 'tomas 9/8/2021 20:27'!validarEmpAdm: adm unJeraquico: jer	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					jer validarEmpAdm: adm! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:06'!consultarDonantes: jer	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					^jer consultarDonantes: empresas! !!Balp methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!empleados	^ empleados! !!Balp methodsFor: 'initialization' stamp: 'TomasArrue 9/24/2021 14:44'!initialize	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	empleados := OrderedCollection new.	empresas := OrderedCollection new! !Object subclass: #Donacion	instanceVariableNames: 'turnoRetiro diaRetirado estadoDonacion productos'	classVariableNames: ''	package: 'Trabajo Final OO1'!!Donacion commentStamp: 'LucasDiLorenzo 9/25/2021 16:30' prior: 0!this is the class Donacion!!Donacion methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!turnoRetiro	^ turnoRetiro! !!Donacion methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 15:53'!confirmarYSinRetirar	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self turnoRetiro: Date today.	self estadoDonacion: 'confirmada y sin retirar'! !!Donacion methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:32'!registrarRetiro: fecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self cambiarEstadoRetirado.	self diaRetirado: fecha! !!Donacion methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 15:53'!actualizarEstado: est	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoDonacion: est! !!Donacion methodsFor: 'accessing' stamp: 'LucasDiLorenzo 10/9/2021 14:31'!menosDeUnAnio	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	diaRetirado isNotNil		ifTrue: [ ^ diaRetirado > (Date today - 1 year) asDate ]		ifFalse: [ ^ false ] ! !!Donacion methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!productos	^ productos! !!Donacion methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 16:04'!estadoEnDeposito	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoDonacion: 'en deposito'! !!Donacion methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 21:01'!actualizarTurnoRetiro: fecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self turnoRetiro: fecha! !!Donacion methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 15:53'!cambiarEstadoRetirado	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoDonacion: 'retirado'! !!Donacion methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 11:12'!cargarProducto: prod	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self productos add: prod! !!Donacion methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 21:03'!actualizarDiaRetiro: fecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self diaRetirado: fecha! !!Donacion methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 15:52'!estadoDonacion	^ estadoDonacion! !!Donacion methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 21:02'!diaRetirado	^ diaRetirado! !!Donacion methodsFor: 'initialize' stamp: 'LucasDiLorenzo 9/25/2021 15:52'!initialize	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	productos := OrderedCollection new.	estadoDonacion := 'sin confirmar'.	turnoRetiro := nil.	diaRetirado := nil! !!Donacion methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!turnoRetiro: anObject	turnoRetiro := anObject! !!Donacion methodsFor: 'private' stamp: 'LucasDiLorenzo 9/25/2021 15:52'!estadoDonacion:anObject	estadoDonacion:= anObject! !!Donacion methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!productos: anObject	productos := anObject! !!Donacion methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 21:02'!diaRetirado: anObject	diaRetirado := anObject! !Object subclass: #Empresa	instanceVariableNames: 'nombre cuit direccion telefono estadoEmpresa donaciones persona'	classVariableNames: ''	package: 'Trabajo Final OO1'!!Empresa commentStamp: 'LucasDiLorenzo 9/25/2021 16:31' prior: 0!this is the class Empleado!!Empresa methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!nombre: anObject	nombre := anObject! !!Empresa methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!direccion: anObject	direccion := anObject! !!Empresa methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!donaciones: anObject	donaciones := anObject! !!Empresa methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!telefono: anObject	telefono := anObject! !!Empresa methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!persona: anObject	persona := anObject! !!Empresa methodsFor: 'private' stamp: 'LucasDiLorenzo 9/25/2021 13:50'!estadoEmpresa: anObject	estadoEmpresa:= anObject! !!Empresa methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!cuit: anObject	cuit := anObject! !!Empresa methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!persona	^ persona! !!Empresa methodsFor: 'accessing' stamp: 'tomas 10/3/2021 20:08'!reporteAnual	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"				| dic |	dic := Dictionary new.	self donaciones select: [ :d | d menosDeUnAnio ] thenCollect: 	[ :d | dic at: d diaRetirado asString put:d productos ].	   ^ dic ! !!Empresa methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!donaciones	^ donaciones! !!Empresa methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!nombre	^ nombre! !!Empresa methodsFor: 'accessing' stamp: 'LucasDiLorenzo 10/9/2021 15:17'!obtenerDonaciones	^ donaciones collect: [ :d | d ]! !!Empresa methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 13:50'!empresaCon: nom unCuit: cui unaDireccion: dir unTelefono: tel unaPersona: per	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	nombre := nom.	cuit := cui.	direccion := dir.	telefono := tel.	persona := per.	donaciones := OrderedCollection new.	estadoEmpresa  := 'empresa sin confirmar'! !!Empresa methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:13'!cargarDonacion: don	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self donaciones add: don 	! !!Empresa methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!cuit	^ cuit! !!Empresa methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 13:54'!confirmarEstado	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self estadoEmpresa: 'empresa confirmada'! !!Empresa methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!telefono	^ telefono! !!Empresa methodsFor: 'accessing' stamp: 'LucasDiLorenzo 9/25/2021 13:50'!estadoEmpresa	^ estadoEmpresa ! !!Empresa methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!direccion	^ direccion! !!Empresa methodsFor: 'accessing' stamp: 'LucasDiLorenzo 10/9/2021 16:05'!ofrecerDonacio: balp unaDonacion: don	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self cargarDonacion: don! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empresa class	instanceVariableNames: ''!!Empresa class methodsFor: 'constructor' stamp: 'TomasArrue 9/6/2021 21:34'!empresaCon: nom unCuit: cui unaDireccion: dir unTelefono: tel unaPersona: per 	"comment stating purpose of class-side message"	"scope: class-variables  &  class-instance-variables"					^ self new empresaCon: nom unCuit: cui unaDireccion: dir unTelefono: tel unaPersona: per ! !Object subclass: #Jerarquico	instanceVariableNames: ''	classVariableNames: ''	package: 'Trabajo Final OO1'!!Jerarquico commentStamp: 'LucasDiLorenzo 9/25/2021 16:31' prior: 0!this is the class Jerarquico!!Jerarquico methodsFor: 'private ' stamp: 'LucasDiLorenzo 9/25/2021 13:54'!validarEmpresa: emp	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	emp confirmarEstado.! !!Jerarquico methodsFor: 'private ' stamp: 'TomasArrue 9/16/2021 12:08'!consultarDonantes: emps	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"				| dic |	dic := Dictionary new.	emps do: [ :emp | dic at: emp put: (emp donaciones) ].	^ dic! !!Jerarquico methodsFor: 'private ' stamp: 'TomasArrue 9/29/2021 10:34'!validarEmpAdm: adm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	adm categoria estadoAdministrativo = 'sin confirmar'		ifTrue: [ adm confirmarEstado ]! !!Jerarquico methodsFor: 'private ' stamp: 'TomasArrue 9/29/2021 10:30'!rechazarEmpAdm: adm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	adm categoria estadoAdministrativo = 'sin confirmar'		ifTrue: [ adm negarEstado ]! !Object subclass: #Persona	instanceVariableNames: 'nombre apellido dni celular correo'	classVariableNames: ''	package: 'Trabajo Final OO1'!!Persona commentStamp: 'LucasDiLorenzo 9/25/2021 16:31' prior: 0!this is the class Persona!!Persona methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!nombre	^ nombre! !!Persona methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!dni	^ dni! !!Persona methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!celular	^ celular! !!Persona methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!correo	^ correo! !!Persona methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!apellido	^ apellido! !!Persona methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!nombre: anObject	nombre := anObject! !!Persona methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!celular: anObject	celular := anObject! !!Persona methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!correo: anObject	correo := anObject! !!Persona methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!apellido: anObject	apellido := anObject! !!Persona methodsFor: 'private' stamp: 'TomasArrue 9/29/2021 08:31'!personaCon: nom unApellido: ape unCelular: cel unCorreo: mail unDni: dnii	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self nombre: nom.	self apellido: ape.	self celular: cel.	self correo: mail.	self dni: dnii.! !!Persona methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!dni: anObject	dni := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'constructor' stamp: 'TomasArrue 9/29/2021 08:31'!personaCon: nom unApellido: ape unCelular: cel unCorreo: mail unDni: dnii	"comment stating purpose of class-side message"	"scope: class-variables  &  class-instance-variables"					^ self new personaCon: nom unApellido: ape unCelular: cel unCorreo: mail unDni: dnii.! !Persona subclass: #Empleado	instanceVariableNames: 'categoria'	classVariableNames: ''	package: 'Trabajo Final OO1'!!Empleado commentStamp: 'LucasDiLorenzo 9/25/2021 16:31' prior: 0!this is the class Empleado!!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!categoria	^ categoria! !!Empleado methodsFor: 'accessing' stamp: 'LucasDiLorenzo 10/9/2021 16:33'!validarEmpAdm: adm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	(self isJerarquico & adm isAdministrativo) ifTrue: [ categoria validarEmpAdm: adm ]! !!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 9/29/2021 10:01'!confirmarEstado	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					(self isAdministrativo)	ifTrue: [ categoria confirmarEstado ]! !!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 10/6/2021 14:47'!empleadoCon: nom unApellido: ape unDni: dn unCelular: cel unCorreo: corr unaCategoria: categ	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"   self personaCon: nom unApellido: ape  unCelular: dn  unCorreo: corr  unDni: dn. 	categoria := categ.! !!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:22'!validarDonacion: don	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"			(self isAdministrativo)	ifTrue: [ categoria validarDonacion: don ]	! !!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 9/10/2021 10:50'!validarEmpresa: empr	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					(self isJerarquico)	ifTrue: [ categoria validarEmpresa: empr ]	! !!Empleado methodsFor: 'accessing' stamp: 'LucasDiLorenzo 10/9/2021 15:02'!consultarDonaciones: emps	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self isAdministrativo ifTrue: [ 		^ categoria consultarDonaciones: emps ]! !!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:35'!registrarDeposito: don	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					(self isAdministrativo)	ifTrue: [ categoria registrarDeposito: don ]! !!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:30'!registrarRetiro: don unaFecha: fecha	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"			(self isAdministrativo)	ifTrue: [ categoria registrarRetiro: don unaFecha: fecha ]	! !!Empleado methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 12:06'!consultarDonantes: emps	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					(self isJerarquico)	ifTrue: [ ^categoria consultarDonantes: emps ]! !!Empleado methodsFor: 'private' stamp: 'TomasArrue 9/29/2021 10:29'!negarEstado 	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self isAdministrativo 		ifTrue: [ self categoria negarEstado ]! !!Empleado methodsFor: 'private' stamp: 'TomasArrue 9/10/2021 10:50'!isJerarquico	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					^ self categoria className = 'Jerarquico'	! !!Empleado methodsFor: 'private' stamp: 'TomasArrue 9/29/2021 10:10'!rechazarEmpAdm: adm	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"	self isJerarquico		ifTrue: [ categoria rechazarEmpAdm: adm ]! !!Empleado methodsFor: 'private' stamp: 'TomasArrue 9/6/2021 20:30'!categoria: anObject	categoria := anObject! !!Empleado methodsFor: 'private' stamp: 'TomasArrue 9/10/2021 10:50'!isAdministrativo	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					^ self categoria className = 'Administrativo'	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empleado class	instanceVariableNames: ''!!Empleado class methodsFor: 'constructor' stamp: 'TomasArrue 10/6/2021 14:47'!empleadoCon: nom unApellido: ape unDni: dn unCelular: cel unCorreo: corr unaCategoria: categ	"comment stating purpose of class-side message"	"scope: class-variables  &  class-instance-variables"	^ (self new personaCon:nom unApellido:ape  unCelular:cel  unCorreo:corr  unDni:dn) categoria:categ! !Object subclass: #Producto	instanceVariableNames: 'tipo marca vencimiento cantidad'	classVariableNames: ''	package: 'Trabajo Final OO1'!!Producto commentStamp: 'LucasDiLorenzo 9/25/2021 16:31' prior: 0!this is the class Producto!!Producto methodsFor: 'private ' stamp: 'TomasArrue 9/16/2021 11:08'!cantidad: anObject	cantidad := anObject! !!Producto methodsFor: 'private ' stamp: 'TomasArrue 9/16/2021 11:10'!productoCon: tip unaMarca: marc unaVencimiento: ven unaCantidad: cant	"comment stating purpose of instance-side message"	"scope: class-variables  &  instance-variables"					self tipo: tip.	self marca: marc.	self vencimiento: ven.	self cantidad: cant.! !!Producto methodsFor: 'private ' stamp: 'TomasArrue 9/6/2021 20:30'!tipo: anObject	tipo := anObject! !!Producto methodsFor: 'private ' stamp: 'TomasArrue 9/6/2021 20:30'!vencimiento: anObject	vencimiento := anObject! !!Producto methodsFor: 'private ' stamp: 'TomasArrue 9/6/2021 20:30'!marca: anObject	marca := anObject! !!Producto methodsFor: 'accessing' stamp: 'TomasArrue 9/16/2021 11:08'!cantidad	^ cantidad! !!Producto methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!tipo	^ tipo! !!Producto methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!marca	^ marca! !!Producto methodsFor: 'accessing' stamp: 'TomasArrue 9/6/2021 20:30'!vencimiento	^ vencimiento! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'constructor' stamp: 'TomasArrue 9/16/2021 11:11'!productoCon: tip unaMarca: marc unaVencimiento: ven unaCantidad: cant	"comment stating purpose of class-side message"	"scope: class-variables  &  class-instance-variables"					^ self new productoCon: tip unaMarca: marc unaVencimiento: ven unaCantidad: cant! !